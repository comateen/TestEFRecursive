// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestEFRecursive;

#nullable disable

namespace TestEFRecursive.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestEFRecursive.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Profile", null, t =>
                        {
                            t.HasCheckConstraint("CK_Email", "Email LIKE '__%@__%.%'");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "g.adnet@email.be",
                            FirstName = "Geoffroy",
                            LastName = "Adnet"
                        },
                        new
                        {
                            Id = 2,
                            Email = "s.connor@skynet.com",
                            FirstName = "Sarah",
                            LastName = "Connor"
                        },
                        new
                        {
                            Id = 3,
                            Email = "hell.master69@lux.god",
                            FirstName = "Lucifer",
                            LastName = "Morningstar"
                        });
                });

            modelBuilder.Entity("TestEFRecursive.Entities.ProfileShared", b =>
                {
                    b.Property<int>("BasedUserId")
                        .HasColumnType("int");

                    b.Property<int>("SharedProfileId")
                        .HasColumnType("int");

                    b.Property<int>("SharedprofileId")
                        .HasColumnType("int");

                    b.HasKey("BasedUserId", "SharedProfileId");

                    b.HasIndex("SharedProfileId");

                    b.HasIndex("SharedprofileId");

                    b.ToTable("ProfileShared", (string)null);
                });

            modelBuilder.Entity("TestEFRecursive.Entities.ProfileShared", b =>
                {
                    b.HasOne("TestEFRecursive.Entities.Profile", "profile")
                        .WithMany("Profiles")
                        .HasForeignKey("SharedProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestEFRecursive.Entities.Profile", "Sharedprofile")
                        .WithMany()
                        .HasForeignKey("SharedprofileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sharedprofile");

                    b.Navigation("profile");
                });

            modelBuilder.Entity("TestEFRecursive.Entities.Profile", b =>
                {
                    b.Navigation("Profiles");
                });
#pragma warning restore 612, 618
        }
    }
}
